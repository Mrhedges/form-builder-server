version: '3.8'

services:
  dev:
    container_name: nestjs_api_dev
    image: nestjs-api-dev:1.0.0
    build:
      context: .
      target: development
      dockerfile: ./Dockerfile
    command: npm run start:dev
    env_file:
      - .env
    networks:
      # - webnet
      - nesjs-network
    depends_on:
      - redis
      - postgres
    ports:
      - 3000:3000
      - 9229:9229
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    restart: unless-stopped

  prod:
    container_name: nestjs_api_prod
    image: nestjs-api-prod:1.0.0
    build:
      context: .
      target: production
      dockerfile: ./Dockerfile
    command: npm run start:prod
    ports:
      - 3000:3000
      - 9229:9229
    networks:
      # - webnet
      - nesjs-network
    depends_on:
      - redis
      - postgres
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    restart: unless-stopped

  redis:
    container_name: redis
    image: redis:5
    networks:
      # - webnet
      - nesjs-network

  postgres:
    container_name: postgres
    image: postgres:12
    networks:
      # - webnet
      - nesjs-network
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_DB: ${DB_DATABASE_NAME}
      PG_DATA: /var/lib/postgresql/data
    ports:
      - 5432:5432
    volumes:
      - pgdata:/var/lib/postgresql/data

networks:
  # webnet:
  nesjs-network:

volumes:
  pgdata: